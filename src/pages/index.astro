---
import Layout from "../layouts/Layout.astro";
import { getDataForGraph, fetchGradeEntries } from "../utils/hkdirApi";
import { allEquals, getUnique } from "../utils/object";
import BarGraph from "../components/graphs/BarGraph.astro";
import { getColorByStudyProgrammeCode } from "../utils/utils";

// const testData: BarGraphData
//  = {data: [
//   { label: "A", bars: [{ value: 15, color: "#0d5474" }, { value: 12 }] },
//   { label: "B", bars: [{ value: 23, color: "#0d5474"  }, { value: 12 }] },
//   { label: "C", bars: [{ value: 9, color: "#0d5474"  }, { value: 8 }] },
//   { label: "D", bars: [{ value: 14, color: "#0d5474" }, { value: 9 }] },
//   { label: "E", bars: [{ value: 25, color: "#0d5474"  }, { value: 15 }] },
//   { label: "F", bars: [{ value: 29, color: "#0d5474"  }, { value: 2 }] },
// ]};

// Values for specifying graph
const filtering = {
  classCode: "TDT4140-1",
  year: 2023,
  semester: "Vår",
};

const gradeEntries = await fetchGradeEntries(["BIT", "MTDT"], [
              filtering.classCode
            ]);

const data = getDataForGraph(
  gradeEntries.filter((entry) => allEquals(entry, filtering))
);
---

<Layout title="Studieløpet">
  <main>
    <h1>Studie<span class="text-gradient">løpet</span></h1>
    <div class="bg-gray-800 p-5 flex flex-col ">
      <h2 class="">{filtering.classCode.slice(0, -2)}</h2>
      <h3 class="italic text-sm mb-2">{filtering.semester} {filtering.year}</h3>
      <BarGraph
        data={data}
        seriesConfig={getUnique(
          gradeEntries,
          (entry) => entry.studyProgrammeCode
        ).map((code) => ({
          label: code,
          color: getColorByStudyProgrammeCode(code),
        }))}
      />
    </div>
  </main>
</Layout>