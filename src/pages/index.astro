---
import Layout from "../layouts/Layout.astro";
import { getDataForGraph, getGradeEntries } from "../utils/hkdirApi";
import { allEquals, getUnique } from "../utils/object";
import BarGraph from "../components/graphs/BarGraph.astro";
import { getColorByStudyProgrammeCode } from "../utils/utils";

// const testData: BarGraphData
//  = {data: [
//   { label: "A", bars: [{ value: 15, color: "#0d5474" }, { value: 12 }] },
//   { label: "B", bars: [{ value: 23, color: "#0d5474"  }, { value: 12 }] },
//   { label: "C", bars: [{ value: 9, color: "#0d5474"  }, { value: 8 }] },
//   { label: "D", bars: [{ value: 14, color: "#0d5474" }, { value: 9 }] },
//   { label: "E", bars: [{ value: 25, color: "#0d5474"  }, { value: 15 }] },
//   { label: "F", bars: [{ value: 29, color: "#0d5474"  }, { value: 2 }] },
// ]};

// Values for specifying graph
const filtering = {
  classCode: "TDT4120-1",
  year: 2023,
  semester: "Høst",
};

const gradeEntries = await getGradeEntries();

const data = getDataForGraph(
  gradeEntries.filter((entry) => allEquals(entry, filtering))
);
---

<Layout title="Halla, Kalla!">
  <main>
    <h1>Studie<span class="text-gradient">løpet</span></h1>
    <div class="bg-gray-800 p-5 flex flex-col gap-5">
      <BarGraph
        data={data}
        seriesConfig={getUnique(
          gradeEntries,
          (entry) => entry.studyProgrammeCode
        ).map((code) => ({
          label: code,
          color: getColorByStudyProgrammeCode(code),
        }))}
      />
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
