---
import Layout from "../layouts/Layout.astro";
import BarGraph from "../components/graphs/BarGraph.astro";
import { allEquals, getUnique } from "../utils/object";
import { getColorByStudyProgrammeCode } from "../utils/utils";
import { fetchClasses, fetchGradeEntries, getDataForGraph } from "../utils/hkdirApi";

export async function getStaticPaths() {
  const allClasses = await fetchClasses()
  console.log(allClasses)
  
  return allClasses.map(classs => {
    return {
      params: {classCode: classs.classCode.slice(0, -2)},
      props: {classs},
    }
  });
};

const { classCode } = Astro.params;
const { classs } = Astro.props;

// Values for specifying graph
const filtering = {
  classCode: classs.classCode,
  // year: classs.year,
//   semester: page.semester,
};

const gradeEntries = await fetchGradeEntries(["BIT", "MTDT"], filtering.classCode, 2);


const filteredGradeEntries = gradeEntries.filter((entry) => allEquals(entry, filtering))

let data;
let semester;
let year;

if (filteredGradeEntries.length != 0) {
  data = getDataForGraph(filteredGradeEntries);
  semester = filteredGradeEntries[0].semester
  year = filteredGradeEntries[0].year
}
  
---

<Layout title={`StudielÃ¸pet | ${classCode}`}>
    <div class="bg-gray-800 p-5 flex flex-col ">
      <h2 class="">{filtering.classCode.slice(0, -2)}</h2>
      {data ? <h3 class="italic text-sm mb-2">{semester} {year}</h3>
      <BarGraph
        data={data}
        seriesConfig={getUnique(
          gradeEntries,
          (entry) => entry.studyProgrammeCode
        ).map((code) => ({
          label: code,
          color: getColorByStudyProgrammeCode(code),
        }))}
      /> :
      <p><i>Ingen data for de spesifiserte parametrene.</i></p>}
</Layout>